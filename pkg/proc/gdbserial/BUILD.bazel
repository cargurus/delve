load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "gdbserial",
    srcs = [
        "gdbserver.go",
        "gdbserver_conn.go",
        "gdbserver_unix.go",
        "gdbserver_windows.go",
        "rr.go",
    ],
    importpath = "github.com/go-delve/delve/pkg/proc/gdbserial",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/config",
        "//pkg/dwarf/op",
        "//pkg/elfwriter",
        "//pkg/logflags",
        "//pkg/proc",
        "//pkg/proc/internal/ebpf",
        "//pkg/proc/linutil",
        "//pkg/proc/macutil",
        "//vendor/github.com/mattn/go-isatty",
        "//vendor/github.com/sirupsen/logrus",
    ] + select({
        "@io_bazel_rules_go//go/platform:android": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:darwin": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:freebsd": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:ios": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "gdbserial_test",
    srcs = ["rr_test.go"],
    deps = [
        ":gdbserial",
        "//pkg/logflags",
        "//pkg/proc",
        "//pkg/proc/test",
    ],
)
